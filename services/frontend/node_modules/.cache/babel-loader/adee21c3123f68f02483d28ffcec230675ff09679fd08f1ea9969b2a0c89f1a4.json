{"ast":null,"code":"var _jsxFileName = \"/Users/vitorhsr99/repos/eco-verse/services/frontend/src/contexts/User.context.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { getProvider } from \"plugins/provider\";\nimport { logout } from \"utils/logout\";\nimport { useWeb3 } from \"contexts/Web3.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext([]);\nexport const UserProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    setWeb3\n  } = useWeb3();\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\n  const handleUserOnPageLoad = async () => {\n    const provider = await getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n\n    // If user wallet is no longer connected, logout\n    if (!accounts[0] && user) {\n      logout(setWeb3, setUser);\n    }\n    // Set user in localStorage, or clear localStorage if no wallet connected\n    accounts[0] ? localStorage.setItem(\"user\", accounts[0]) : localStorage.removeItem(\"user\");\n    setUser(accounts[0]);\n  };\n  const value = React.useMemo(() => ({\n    user,\n    setUser\n  }), [user, setUser]);\n  useEffect(() => {\n    handleUserOnPageLoad();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      ...value\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"9o2i2rO+tr45G+mF2CEIOlIM39c=\", false, function () {\n  return [useWeb3];\n});\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","getProvider","logout","useWeb3","jsxDEV","_jsxDEV","UserContext","createContext","UserProvider","_ref","_s","children","setWeb3","user","setUser","localStorage","getItem","handleUserOnPageLoad","provider","accounts","request","method","setItem","removeItem","value","useMemo","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["/Users/vitorhsr99/repos/eco-verse/services/frontend/src/contexts/User.context.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { getProvider } from \"plugins/provider\";\nimport { logout } from \"utils/logout\";\nimport { useWeb3 } from \"contexts/Web3.context\";\n\nexport const UserContext = React.createContext<any>([]);\n\nexport const UserProvider = ({ children }: any) => {\n  const { setWeb3 } = useWeb3();\n  const [user, setUser] = useState<any>(localStorage.getItem(\"user\"));\n\n  const handleUserOnPageLoad = async () => {\n    const provider = await getProvider();\n    const accounts = await provider.request({ method: \"eth_accounts\" });\n\n    // If user wallet is no longer connected, logout\n    if (!accounts[0] && user) {\n      logout(setWeb3, setUser);\n    }\n    // Set user in localStorage, or clear localStorage if no wallet connected\n    accounts[0]\n      ? localStorage.setItem(\"user\", accounts[0])\n      : localStorage.removeItem(\"user\");\n    setUser(accounts[0]);\n  };\n\n  const value = React.useMemo(\n    () => ({\n      user,\n      setUser,\n    }),\n    [user, setUser]\n  );\n\n  useEffect(() => {\n    handleUserOnPageLoad();\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ ...value }}>{children}</UserContext.Provider>\n  );\n};\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,OAAO,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,WAAW,gBAAGT,KAAK,CAACU,aAAa,CAAM,EAAE,CAAC;AAEvD,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EAC5C,MAAM;IAAEG;EAAQ,CAAC,GAAGT,OAAO,EAAE;EAC7B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAMe,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAEnE,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMC,QAAQ,GAAG,MAAMjB,WAAW,EAAE;IACpC,MAAMkB,QAAQ,GAAG,MAAMD,QAAQ,CAACE,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAe,CAAC,CAAC;;IAEnE;IACA,IAAI,CAACF,QAAQ,CAAC,CAAC,CAAC,IAAIN,IAAI,EAAE;MACxBX,MAAM,CAACU,OAAO,EAAEE,OAAO,CAAC;IAC1B;IACA;IACAK,QAAQ,CAAC,CAAC,CAAC,GACPJ,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEH,QAAQ,CAAC,CAAC,CAAC,CAAC,GACzCJ,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IACnCT,OAAO,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMK,KAAK,GAAG3B,KAAK,CAAC4B,OAAO,CACzB,OAAO;IACLZ,IAAI;IACJC;EACF,CAAC,CAAC,EACF,CAACD,IAAI,EAAEC,OAAO,CAAC,CAChB;EAEDf,SAAS,CAAC,MAAM;IACdkB,oBAAoB,EAAE;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACF,KAAK,EAAE;MAAE,GAAGA;IAAM,CAAE;IAAAb,QAAA,EAAEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAwB;AAEhF,CAAC;AAACpB,EAAA,CAlCWF,YAAY;EAAA,QACHL,OAAO;AAAA;AAAA4B,EAAA,GADhBvB,YAAY;AAoCzB,OAAO,MAAMwB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOnC,UAAU,CAACQ,WAAW,CAAC;AAChC,CAAC;AAAC2B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}