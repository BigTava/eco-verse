{"ast":null,"code":"import G, { Fragment as xe, createContext as Y, createRef as ye, useCallback as ge, useContext as Z, useEffect as ee, useMemo as D, useReducer as Le, useRef as I } from \"react\";\nimport { useDisposables as N } from '../../hooks/use-disposables.js';\nimport { useId as j } from '../../hooks/use-id.js';\nimport { useIsoMorphicEffect as V } from '../../hooks/use-iso-morphic-effect.js';\nimport { useComputed as te } from '../../hooks/use-computed.js';\nimport { useSyncRefs as k } from '../../hooks/use-sync-refs.js';\nimport { Features as oe, forwardRefWithAs as w, render as _, compact as Oe } from '../../utils/render.js';\nimport { match as C } from '../../utils/match.js';\nimport { disposables as W } from '../../utils/disposables.js';\nimport { Keys as g } from '../keyboard.js';\nimport { Focus as A, calculateActiveIndex as me } from '../../utils/calculate-active-index.js';\nimport { isDisabledReactIssue7711 as Re } from '../../utils/bugs.js';\nimport { isFocusableElement as ve, FocusableMode as Ae, sortByDomNode as Se } from '../../utils/focus-management.js';\nimport { useOpenClosed as Pe, State as K, OpenClosedProvider as Ee } from '../../internal/open-closed.js';\nimport { useResolveButtonType as he } from '../../hooks/use-resolve-button-type.js';\nimport { useOutsideClick as De } from '../../hooks/use-outside-click.js';\nimport { Hidden as Ie, Features as Ce } from '../../internal/hidden.js';\nimport { objectToFormEntries as Fe } from '../../utils/form.js';\nimport { getOwnerDocument as Me } from '../../utils/owner.js';\nimport { useEvent as f } from '../../hooks/use-event.js';\nimport { useControllable as ke } from '../../hooks/use-controllable.js';\nimport { useLatestValue as we } from '../../hooks/use-latest-value.js';\nimport { useTrackedPointer as _e } from '../../hooks/use-tracked-pointer.js';\nvar Ue = (o => (o[o.Open = 0] = \"Open\", o[o.Closed = 1] = \"Closed\", o))(Ue || {}),\n  Be = (o => (o[o.Single = 0] = \"Single\", o[o.Multi = 1] = \"Multi\", o))(Be || {}),\n  He = (o => (o[o.Pointer = 0] = \"Pointer\", o[o.Other = 1] = \"Other\", o))(He || {}),\n  Ge = (i => (i[i.OpenListbox = 0] = \"OpenListbox\", i[i.CloseListbox = 1] = \"CloseListbox\", i[i.GoToOption = 2] = \"GoToOption\", i[i.Search = 3] = \"Search\", i[i.ClearSearch = 4] = \"ClearSearch\", i[i.RegisterOption = 5] = \"RegisterOption\", i[i.UnregisterOption = 6] = \"UnregisterOption\", i[i.RegisterLabel = 7] = \"RegisterLabel\", i))(Ge || {});\nfunction X(e) {\n  let a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : o => o;\n  let o = e.activeOptionIndex !== null ? e.options[e.activeOptionIndex] : null,\n    r = Se(a(e.options.slice()), t => t.dataRef.current.domRef.current),\n    l = o ? r.indexOf(o) : null;\n  return l === -1 && (l = null), {\n    options: r,\n    activeOptionIndex: l\n  };\n}\nlet Ne = {\n    [1](e) {\n      return e.dataRef.current.disabled || e.listboxState === 1 ? e : {\n        ...e,\n        activeOptionIndex: null,\n        listboxState: 1\n      };\n    },\n    [0](e) {\n      if (e.dataRef.current.disabled || e.listboxState === 0) return e;\n      let a = e.activeOptionIndex,\n        {\n          isSelected: o\n        } = e.dataRef.current,\n        r = e.options.findIndex(l => o(l.dataRef.current.value));\n      return r !== -1 && (a = r), {\n        ...e,\n        listboxState: 0,\n        activeOptionIndex: a\n      };\n    },\n    [2](e, a) {\n      var l;\n      if (e.dataRef.current.disabled || e.listboxState === 1) return e;\n      let o = X(e),\n        r = me(a, {\n          resolveItems: () => o.options,\n          resolveActiveIndex: () => o.activeOptionIndex,\n          resolveId: t => t.id,\n          resolveDisabled: t => t.dataRef.current.disabled\n        });\n      return {\n        ...e,\n        ...o,\n        searchQuery: \"\",\n        activeOptionIndex: r,\n        activationTrigger: (l = a.trigger) != null ? l : 1\n      };\n    },\n    [3]: (e, a) => {\n      if (e.dataRef.current.disabled || e.listboxState === 1) return e;\n      let r = e.searchQuery !== \"\" ? 0 : 1,\n        l = e.searchQuery + a.value.toLowerCase(),\n        p = (e.activeOptionIndex !== null ? e.options.slice(e.activeOptionIndex + r).concat(e.options.slice(0, e.activeOptionIndex + r)) : e.options).find(i => {\n          var b;\n          return !i.dataRef.current.disabled && ((b = i.dataRef.current.textValue) == null ? void 0 : b.startsWith(l));\n        }),\n        u = p ? e.options.indexOf(p) : -1;\n      return u === -1 || u === e.activeOptionIndex ? {\n        ...e,\n        searchQuery: l\n      } : {\n        ...e,\n        searchQuery: l,\n        activeOptionIndex: u,\n        activationTrigger: 1\n      };\n    },\n    [4](e) {\n      return e.dataRef.current.disabled || e.listboxState === 1 || e.searchQuery === \"\" ? e : {\n        ...e,\n        searchQuery: \"\"\n      };\n    },\n    [5]: (e, a) => {\n      let o = {\n          id: a.id,\n          dataRef: a.dataRef\n        },\n        r = X(e, l => [...l, o]);\n      return e.activeOptionIndex === null && e.dataRef.current.isSelected(a.dataRef.current.value) && (r.activeOptionIndex = r.options.indexOf(o)), {\n        ...e,\n        ...r\n      };\n    },\n    [6]: (e, a) => {\n      let o = X(e, r => {\n        let l = r.findIndex(t => t.id === a.id);\n        return l !== -1 && r.splice(l, 1), r;\n      });\n      return {\n        ...e,\n        ...o,\n        activationTrigger: 1\n      };\n    },\n    [7]: (e, a) => ({\n      ...e,\n      labelId: a.id\n    })\n  },\n  $ = Y(null);\n$.displayName = \"ListboxActionsContext\";\nfunction U(e) {\n  let a = Z($);\n  if (a === null) {\n    let o = new Error(`<${e} /> is missing a parent <Listbox /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(o, U), o;\n  }\n  return a;\n}\nlet z = Y(null);\nz.displayName = \"ListboxDataContext\";\nfunction B(e) {\n  let a = Z(z);\n  if (a === null) {\n    let o = new Error(`<${e} /> is missing a parent <Listbox /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(o, B), o;\n  }\n  return a;\n}\nfunction je(e, a) {\n  return C(a.type, Ne, e, a);\n}\nlet Ve = xe;\nfunction Ke(e, a) {\n  let {\n    value: o,\n    defaultValue: r,\n    form: l,\n    name: t,\n    onChange: p,\n    by: u = (s, d) => s === d,\n    disabled: i = !1,\n    horizontal: b = !1,\n    multiple: R = !1,\n    ...m\n  } = e;\n  const P = b ? \"horizontal\" : \"vertical\";\n  let E = k(a),\n    [L = R ? [] : void 0, v] = ke(o, p, r),\n    [c, n] = Le(je, {\n      dataRef: ye(),\n      listboxState: 1,\n      options: [],\n      searchQuery: \"\",\n      labelId: null,\n      activeOptionIndex: null,\n      activationTrigger: 1\n    }),\n    x = I({\n      static: !1,\n      hold: !1\n    }),\n    h = I(null),\n    Q = I(null),\n    J = I(null),\n    y = f(typeof u == \"string\" ? (s, d) => {\n      let O = u;\n      return (s == null ? void 0 : s[O]) === (d == null ? void 0 : d[O]);\n    } : u),\n    S = ge(s => C(T.mode, {\n      [1]: () => L.some(d => y(d, s)),\n      [0]: () => y(L, s)\n    }), [L]),\n    T = D(() => ({\n      ...c,\n      value: L,\n      disabled: i,\n      mode: R ? 1 : 0,\n      orientation: P,\n      compare: y,\n      isSelected: S,\n      optionsPropsRef: x,\n      labelRef: h,\n      buttonRef: Q,\n      optionsRef: J\n    }), [L, i, R, c]);\n  V(() => {\n    c.dataRef.current = T;\n  }, [T]), De([T.buttonRef, T.optionsRef], (s, d) => {\n    var O;\n    n({\n      type: 1\n    }), ve(d, Ae.Loose) || (s.preventDefault(), (O = T.buttonRef.current) == null || O.focus());\n  }, T.listboxState === 0);\n  let ne = D(() => ({\n      open: T.listboxState === 0,\n      disabled: i,\n      value: L\n    }), [T, i, L]),\n    ie = f(s => {\n      let d = T.options.find(O => O.id === s);\n      d && F(d.dataRef.current.value);\n    }),\n    re = f(() => {\n      if (T.activeOptionIndex !== null) {\n        let {\n          dataRef: s,\n          id: d\n        } = T.options[T.activeOptionIndex];\n        F(s.current.value), n({\n          type: 2,\n          focus: A.Specific,\n          id: d\n        });\n      }\n    }),\n    ae = f(() => n({\n      type: 0\n    })),\n    le = f(() => n({\n      type: 1\n    })),\n    se = f((s, d, O) => s === A.Specific ? n({\n      type: 2,\n      focus: A.Specific,\n      id: d,\n      trigger: O\n    }) : n({\n      type: 2,\n      focus: s,\n      trigger: O\n    })),\n    pe = f((s, d) => (n({\n      type: 5,\n      id: s,\n      dataRef: d\n    }), () => n({\n      type: 6,\n      id: s\n    }))),\n    ue = f(s => (n({\n      type: 7,\n      id: s\n    }), () => n({\n      type: 7,\n      id: null\n    }))),\n    F = f(s => C(T.mode, {\n      [0]() {\n        return v == null ? void 0 : v(s);\n      },\n      [1]() {\n        let d = T.value.slice(),\n          O = d.findIndex(M => y(M, s));\n        return O === -1 ? d.push(s) : d.splice(O, 1), v == null ? void 0 : v(d);\n      }\n    })),\n    de = f(s => n({\n      type: 3,\n      value: s\n    })),\n    ce = f(() => n({\n      type: 4\n    })),\n    fe = D(() => ({\n      onChange: F,\n      registerOption: pe,\n      registerLabel: ue,\n      goToOption: se,\n      closeListbox: le,\n      openListbox: ae,\n      selectActiveOption: re,\n      selectOption: ie,\n      search: de,\n      clearSearch: ce\n    }), []),\n    Te = {\n      ref: E\n    },\n    H = I(null),\n    be = N();\n  return ee(() => {\n    H.current && r !== void 0 && be.addEventListener(H.current, \"reset\", () => {\n      F(r);\n    });\n  }, [H, F]), G.createElement($.Provider, {\n    value: fe\n  }, G.createElement(z.Provider, {\n    value: T\n  }, G.createElement(Ee, {\n    value: C(T.listboxState, {\n      [0]: K.Open,\n      [1]: K.Closed\n    })\n  }, t != null && L != null && Fe({\n    [t]: L\n  }).map((_ref, O) => {\n    let [s, d] = _ref;\n    return G.createElement(Ie, {\n      features: Ce.Hidden,\n      ref: O === 0 ? M => {\n        var q;\n        H.current = (q = M == null ? void 0 : M.closest(\"form\")) != null ? q : null;\n      } : void 0,\n      ...Oe({\n        key: s,\n        as: \"input\",\n        type: \"hidden\",\n        hidden: !0,\n        readOnly: !0,\n        form: l,\n        name: s,\n        value: d\n      })\n    });\n  }), _({\n    ourProps: Te,\n    theirProps: m,\n    slot: ne,\n    defaultTag: Ve,\n    name: \"Listbox\"\n  }))));\n}\nlet Qe = \"button\";\nfunction We(e, a) {\n  var v;\n  let o = j(),\n    {\n      id: r = `headlessui-listbox-button-${o}`,\n      ...l\n    } = e,\n    t = B(\"Listbox.Button\"),\n    p = U(\"Listbox.Button\"),\n    u = k(t.buttonRef, a),\n    i = N(),\n    b = f(c => {\n      switch (c.key) {\n        case g.Space:\n        case g.Enter:\n        case g.ArrowDown:\n          c.preventDefault(), p.openListbox(), i.nextFrame(() => {\n            t.value || p.goToOption(A.First);\n          });\n          break;\n        case g.ArrowUp:\n          c.preventDefault(), p.openListbox(), i.nextFrame(() => {\n            t.value || p.goToOption(A.Last);\n          });\n          break;\n      }\n    }),\n    R = f(c => {\n      switch (c.key) {\n        case g.Space:\n          c.preventDefault();\n          break;\n      }\n    }),\n    m = f(c => {\n      if (Re(c.currentTarget)) return c.preventDefault();\n      t.listboxState === 0 ? (p.closeListbox(), i.nextFrame(() => {\n        var n;\n        return (n = t.buttonRef.current) == null ? void 0 : n.focus({\n          preventScroll: !0\n        });\n      })) : (c.preventDefault(), p.openListbox());\n    }),\n    P = te(() => {\n      if (t.labelId) return [t.labelId, r].join(\" \");\n    }, [t.labelId, r]),\n    E = D(() => ({\n      open: t.listboxState === 0,\n      disabled: t.disabled,\n      value: t.value\n    }), [t]),\n    L = {\n      ref: u,\n      id: r,\n      type: he(e, t.buttonRef),\n      \"aria-haspopup\": \"listbox\",\n      \"aria-controls\": (v = t.optionsRef.current) == null ? void 0 : v.id,\n      \"aria-expanded\": t.disabled ? void 0 : t.listboxState === 0,\n      \"aria-labelledby\": P,\n      disabled: t.disabled,\n      onKeyDown: b,\n      onKeyUp: R,\n      onClick: m\n    };\n  return _({\n    ourProps: L,\n    theirProps: l,\n    slot: E,\n    defaultTag: Qe,\n    name: \"Listbox.Button\"\n  });\n}\nlet Xe = \"label\";\nfunction $e(e, a) {\n  let o = j(),\n    {\n      id: r = `headlessui-listbox-label-${o}`,\n      ...l\n    } = e,\n    t = B(\"Listbox.Label\"),\n    p = U(\"Listbox.Label\"),\n    u = k(t.labelRef, a);\n  V(() => p.registerLabel(r), [r]);\n  let i = f(() => {\n      var m;\n      return (m = t.buttonRef.current) == null ? void 0 : m.focus({\n        preventScroll: !0\n      });\n    }),\n    b = D(() => ({\n      open: t.listboxState === 0,\n      disabled: t.disabled\n    }), [t]);\n  return _({\n    ourProps: {\n      ref: u,\n      id: r,\n      onClick: i\n    },\n    theirProps: l,\n    slot: b,\n    defaultTag: Xe,\n    name: \"Listbox.Label\"\n  });\n}\nlet ze = \"ul\",\n  Je = oe.RenderStrategy | oe.Static;\nfunction qe(e, a) {\n  var c;\n  let o = j(),\n    {\n      id: r = `headlessui-listbox-options-${o}`,\n      ...l\n    } = e,\n    t = B(\"Listbox.Options\"),\n    p = U(\"Listbox.Options\"),\n    u = k(t.optionsRef, a),\n    i = N(),\n    b = N(),\n    R = Pe(),\n    m = (() => R !== null ? (R & K.Open) === K.Open : t.listboxState === 0)();\n  ee(() => {\n    var x;\n    let n = t.optionsRef.current;\n    n && t.listboxState === 0 && n !== ((x = Me(n)) == null ? void 0 : x.activeElement) && n.focus({\n      preventScroll: !0\n    });\n  }, [t.listboxState, t.optionsRef]);\n  let P = f(n => {\n      switch (b.dispose(), n.key) {\n        case g.Space:\n          if (t.searchQuery !== \"\") return n.preventDefault(), n.stopPropagation(), p.search(n.key);\n        case g.Enter:\n          if (n.preventDefault(), n.stopPropagation(), t.activeOptionIndex !== null) {\n            let {\n              dataRef: x\n            } = t.options[t.activeOptionIndex];\n            p.onChange(x.current.value);\n          }\n          t.mode === 0 && (p.closeListbox(), W().nextFrame(() => {\n            var x;\n            return (x = t.buttonRef.current) == null ? void 0 : x.focus({\n              preventScroll: !0\n            });\n          }));\n          break;\n        case C(t.orientation, {\n          vertical: g.ArrowDown,\n          horizontal: g.ArrowRight\n        }):\n          return n.preventDefault(), n.stopPropagation(), p.goToOption(A.Next);\n        case C(t.orientation, {\n          vertical: g.ArrowUp,\n          horizontal: g.ArrowLeft\n        }):\n          return n.preventDefault(), n.stopPropagation(), p.goToOption(A.Previous);\n        case g.Home:\n        case g.PageUp:\n          return n.preventDefault(), n.stopPropagation(), p.goToOption(A.First);\n        case g.End:\n        case g.PageDown:\n          return n.preventDefault(), n.stopPropagation(), p.goToOption(A.Last);\n        case g.Escape:\n          return n.preventDefault(), n.stopPropagation(), p.closeListbox(), i.nextFrame(() => {\n            var x;\n            return (x = t.buttonRef.current) == null ? void 0 : x.focus({\n              preventScroll: !0\n            });\n          });\n        case g.Tab:\n          n.preventDefault(), n.stopPropagation();\n          break;\n        default:\n          n.key.length === 1 && (p.search(n.key), b.setTimeout(() => p.clearSearch(), 350));\n          break;\n      }\n    }),\n    E = te(() => {\n      var n, x, h;\n      return (h = (n = t.labelRef.current) == null ? void 0 : n.id) != null ? h : (x = t.buttonRef.current) == null ? void 0 : x.id;\n    }, [t.labelRef.current, t.buttonRef.current]),\n    L = D(() => ({\n      open: t.listboxState === 0\n    }), [t]),\n    v = {\n      \"aria-activedescendant\": t.activeOptionIndex === null || (c = t.options[t.activeOptionIndex]) == null ? void 0 : c.id,\n      \"aria-multiselectable\": t.mode === 1 ? !0 : void 0,\n      \"aria-labelledby\": E,\n      \"aria-orientation\": t.orientation,\n      id: r,\n      onKeyDown: P,\n      role: \"listbox\",\n      tabIndex: 0,\n      ref: u\n    };\n  return _({\n    ourProps: v,\n    theirProps: l,\n    slot: L,\n    defaultTag: ze,\n    features: Je,\n    visible: m,\n    name: \"Listbox.Options\"\n  });\n}\nlet Ye = \"li\";\nfunction Ze(e, a) {\n  let o = j(),\n    {\n      id: r = `headlessui-listbox-option-${o}`,\n      disabled: l = !1,\n      value: t,\n      ...p\n    } = e,\n    u = B(\"Listbox.Option\"),\n    i = U(\"Listbox.Option\"),\n    b = u.activeOptionIndex !== null ? u.options[u.activeOptionIndex].id === r : !1,\n    R = u.isSelected(t),\n    m = I(null),\n    P = we({\n      disabled: l,\n      value: t,\n      domRef: m,\n      get textValue() {\n        var y, S;\n        return (S = (y = m.current) == null ? void 0 : y.textContent) == null ? void 0 : S.toLowerCase();\n      }\n    }),\n    E = k(a, m);\n  V(() => {\n    if (u.listboxState !== 0 || !b || u.activationTrigger === 0) return;\n    let y = W();\n    return y.requestAnimationFrame(() => {\n      var S, T;\n      (T = (S = m.current) == null ? void 0 : S.scrollIntoView) == null || T.call(S, {\n        block: \"nearest\"\n      });\n    }), y.dispose;\n  }, [m, b, u.listboxState, u.activationTrigger, u.activeOptionIndex]), V(() => i.registerOption(r, P), [P, r]);\n  let L = f(y => {\n      if (l) return y.preventDefault();\n      i.onChange(t), u.mode === 0 && (i.closeListbox(), W().nextFrame(() => {\n        var S;\n        return (S = u.buttonRef.current) == null ? void 0 : S.focus({\n          preventScroll: !0\n        });\n      }));\n    }),\n    v = f(() => {\n      if (l) return i.goToOption(A.Nothing);\n      i.goToOption(A.Specific, r);\n    }),\n    c = _e(),\n    n = f(y => c.update(y)),\n    x = f(y => {\n      c.wasMoved(y) && (l || b || i.goToOption(A.Specific, r, 0));\n    }),\n    h = f(y => {\n      c.wasMoved(y) && (l || b && i.goToOption(A.Nothing));\n    }),\n    Q = D(() => ({\n      active: b,\n      selected: R,\n      disabled: l\n    }), [b, R, l]);\n  return _({\n    ourProps: {\n      id: r,\n      ref: E,\n      role: \"option\",\n      tabIndex: l === !0 ? void 0 : -1,\n      \"aria-disabled\": l === !0 ? !0 : void 0,\n      \"aria-selected\": R,\n      disabled: void 0,\n      onClick: L,\n      onFocus: v,\n      onPointerEnter: n,\n      onMouseEnter: n,\n      onPointerMove: x,\n      onMouseMove: x,\n      onPointerLeave: h,\n      onMouseLeave: h\n    },\n    theirProps: p,\n    slot: Q,\n    defaultTag: Ye,\n    name: \"Listbox.Option\"\n  });\n}\nlet et = w(Ke),\n  tt = w(We),\n  ot = w($e),\n  nt = w(qe),\n  it = w(Ze),\n  Ht = Object.assign(et, {\n    Button: tt,\n    Label: ot,\n    Options: nt,\n    Option: it\n  });\nexport { Ht as Listbox };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}