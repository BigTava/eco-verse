{"ast":null,"code":"var _jsxFileName = \"/Users/vitorhsr99/repos/eco-verse/services/frontend/src/App/Providers.tsx\";\n// Core\nimport React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\n// Contexts\nimport MainProvider from \"contexts/Main.context\";\nimport { Web3ContextProvider } from \"contexts/Web3.context\";\nimport { UserProvider } from \"contexts/User.context\";\n\n// Wagmi\nimport { WagmiConfig, createClient, configureChains } from \"wagmi\";\nimport { sepolia, polygonMumbai } from \"@wagmi/core/chains\";\nimport { alchemyProvider } from \"wagmi/providers/alchemy\";\nimport { publicProvider } from \"wagmi/providers/public\";\nimport { CoinbaseWalletConnector } from \"wagmi/connectors/coinbaseWallet\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  chains,\n  provider,\n  webSocketProvider\n} = configureChains([sepolia, polygonMumbai], [alchemyProvider({\n  apiKey: process.env.REACT_APP_SEPOLIA_API_KEY || \"\"\n}), publicProvider()]);\nconst Providers = _ref => {\n  let {\n    children\n  } = _ref;\n  const queryClient = new QueryClient();\n  const client = createClient({\n    autoConnect: true,\n    connectors: [new MetaMaskConnector({\n      chains\n    }), new CoinbaseWalletConnector({\n      chains,\n      options: {\n        appName: \"wagmi\"\n      }\n    }), new WalletConnectConnector({\n      chains,\n      options: {\n        projectId: \"72fe8cfe616d31f641b9199add6c17a3\",\n        version: \"2\"\n      }\n    }), new InjectedConnector({\n      chains,\n      options: {\n        name: \"Injected\",\n        shimDisconnect: true\n      }\n    })],\n    provider,\n    webSocketProvider\n  });\n  return /*#__PURE__*/_jsxDEV(WagmiConfig, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(MainProvider, {\n        children: /*#__PURE__*/_jsxDEV(Web3ContextProvider, {\n          children: /*#__PURE__*/_jsxDEV(UserProvider, {\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c = Providers;\nexport default Providers;\nvar _c;\n$RefreshReg$(_c, \"Providers\");","map":{"version":3,"names":["React","QueryClient","QueryClientProvider","MainProvider","Web3ContextProvider","UserProvider","WagmiConfig","createClient","configureChains","sepolia","polygonMumbai","alchemyProvider","publicProvider","CoinbaseWalletConnector","InjectedConnector","MetaMaskConnector","WalletConnectConnector","jsxDEV","_jsxDEV","chains","provider","webSocketProvider","apiKey","process","env","REACT_APP_SEPOLIA_API_KEY","Providers","_ref","children","queryClient","client","autoConnect","connectors","options","appName","projectId","version","name","shimDisconnect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vitorhsr99/repos/eco-verse/services/frontend/src/App/Providers.tsx"],"sourcesContent":["// Core\nimport React, { FC } from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\n// Contexts\nimport MainProvider from \"contexts/Main.context\";\nimport { Web3ContextProvider } from \"contexts/Web3.context\";\nimport { UserProvider } from \"contexts/User.context\";\n\n// Wagmi\nimport { WagmiConfig, createClient, configureChains } from \"wagmi\";\nimport { sepolia, polygonMumbai } from \"@wagmi/core/chains\";\nimport { alchemyProvider } from \"wagmi/providers/alchemy\";\nimport { publicProvider } from \"wagmi/providers/public\";\nimport { CoinbaseWalletConnector } from \"wagmi/connectors/coinbaseWallet\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { MetaMaskConnector } from \"wagmi/connectors/metaMask\";\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\n\ntype ProvidersProps = {\n  children: React.ReactNode;\n};\n\nconst { chains, provider, webSocketProvider } = configureChains(\n  [sepolia, polygonMumbai],\n  [\n    alchemyProvider({ apiKey: process.env.REACT_APP_SEPOLIA_API_KEY || \"\" }),\n    publicProvider(),\n  ]\n);\n\nconst Providers: FC<ProvidersProps> = ({ children }) => {\n  const queryClient = new QueryClient();\n\n  const client = createClient({\n    autoConnect: true,\n    connectors: [\n      new MetaMaskConnector({ chains }),\n      new CoinbaseWalletConnector({\n        chains,\n        options: {\n          appName: \"wagmi\",\n        },\n      }),\n      new WalletConnectConnector({\n        chains,\n        options: {\n          projectId: \"72fe8cfe616d31f641b9199add6c17a3\",\n          version: \"2\",\n        },\n      }),\n      new InjectedConnector({\n        chains,\n        options: {\n          name: \"Injected\",\n          shimDisconnect: true,\n        },\n      }),\n    ],\n    provider,\n    webSocketProvider,\n  });\n\n  return (\n    <WagmiConfig client={client}>\n      <QueryClientProvider client={queryClient}>\n        <MainProvider>\n          <Web3ContextProvider>\n            <UserProvider>{children}</UserProvider>\n          </Web3ContextProvider>\n        </MainProvider>\n      </QueryClientProvider>\n    </WagmiConfig>\n  );\n};\n\nexport default Providers;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAc,OAAO;AACjC,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;;AAExE;AACA,OAAOC,YAAY,MAAM,uBAAuB;AAChD,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,YAAY,QAAQ,uBAAuB;;AAEpD;AACA,SAASC,WAAW,EAAEC,YAAY,EAAEC,eAAe,QAAQ,OAAO;AAClE,SAASC,OAAO,EAAEC,aAAa,QAAQ,oBAAoB;AAC3D,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,uBAAuB,QAAQ,iCAAiC;AACzE,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,SAASC,sBAAsB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxE,MAAM;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAkB,CAAC,GAAGb,eAAe,CAC7D,CAACC,OAAO,EAAEC,aAAa,CAAC,EACxB,CACEC,eAAe,CAAC;EAAEW,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB,IAAI;AAAG,CAAC,CAAC,EACxEb,cAAc,EAAE,CACjB,CACF;AAED,MAAMc,SAA6B,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EACjD,MAAME,WAAW,GAAG,IAAI5B,WAAW,EAAE;EAErC,MAAM6B,MAAM,GAAGvB,YAAY,CAAC;IAC1BwB,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,CACV,IAAIjB,iBAAiB,CAAC;MAAEI;IAAO,CAAC,CAAC,EACjC,IAAIN,uBAAuB,CAAC;MAC1BM,MAAM;MACNc,OAAO,EAAE;QACPC,OAAO,EAAE;MACX;IACF,CAAC,CAAC,EACF,IAAIlB,sBAAsB,CAAC;MACzBG,MAAM;MACNc,OAAO,EAAE;QACPE,SAAS,EAAE,kCAAkC;QAC7CC,OAAO,EAAE;MACX;IACF,CAAC,CAAC,EACF,IAAItB,iBAAiB,CAAC;MACpBK,MAAM;MACNc,OAAO,EAAE;QACPI,IAAI,EAAE,UAAU;QAChBC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACH;IACDlB,QAAQ;IACRC;EACF,CAAC,CAAC;EAEF,oBACEH,OAAA,CAACZ,WAAW;IAACwB,MAAM,EAAEA,MAAO;IAAAF,QAAA,eAC1BV,OAAA,CAAChB,mBAAmB;MAAC4B,MAAM,EAAED,WAAY;MAAAD,QAAA,eACvCV,OAAA,CAACf,YAAY;QAAAyB,QAAA,eACXV,OAAA,CAACd,mBAAmB;UAAAwB,QAAA,eAClBV,OAAA,CAACb,YAAY;YAAAuB,QAAA,EAAEA;UAAQ;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAgB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACnB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACV;AAElB,CAAC;AAACC,EAAA,GA3CIjB,SAA6B;AA6CnC,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}