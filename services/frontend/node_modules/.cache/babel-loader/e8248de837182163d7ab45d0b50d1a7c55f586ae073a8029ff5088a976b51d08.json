{"ast":null,"code":"import { isIOS as f } from '../../utils/platform.js';\nfunction p() {\n  if (!f()) return {};\n  let o;\n  return {\n    before() {\n      o = window.pageYOffset;\n    },\n    after(_ref) {\n      let {\n        doc: r,\n        d: l,\n        meta: s\n      } = _ref;\n      function i(e) {\n        return s.containers.flatMap(t => t()).some(t => t.contains(e));\n      }\n      l.style(r.body, \"marginTop\", `-${o}px`), window.scrollTo(0, 0);\n      let n = null;\n      l.addEventListener(r, \"click\", e => {\n        if (e.target instanceof HTMLElement) try {\n          let t = e.target.closest(\"a\");\n          if (!t) return;\n          let {\n              hash: c\n            } = new URL(t.href),\n            a = r.querySelector(c);\n          a && !i(a) && (n = a);\n        } catch {}\n      }, !0), l.addEventListener(r, \"touchmove\", e => {\n        e.target instanceof HTMLElement && !i(e.target) && e.preventDefault();\n      }, {\n        passive: !1\n      }), l.add(() => {\n        window.scrollTo(0, window.pageYOffset + o), n && n.isConnected && (n.scrollIntoView({\n          block: \"nearest\"\n        }), n = null);\n      });\n    }\n  };\n}\nexport { p as handleIOSLocking };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}